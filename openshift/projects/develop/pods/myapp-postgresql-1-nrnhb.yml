apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/deployment-config.latest-version: "1"
    openshift.io/deployment-config.name: myapp-postgresql
    openshift.io/deployment.name: myapp-postgresql-1
    openshift.io/scc: restricted
  creationTimestamp: null
  generateName: myapp-postgresql-1-
  labels:
    application: myapp
    deployment: myapp-postgresql-1
    deploymentConfig: myapp-postgresql
    deploymentconfig: myapp-postgresql
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicationController
    name: myapp-postgresql-1
    uid: 01b25d36-f0c9-11e8-ba2b-0aa0c5b29fe8
spec:
  containers:
  - env:
    - name: POSTGRESQL_USER
      value: userki1
    - name: POSTGRESQL_PASSWORD
      value: dLGLDSaR
    - name: POSTGRESQL_DATABASE
      value: root
    - name: POSTGRESQL_MAX_CONNECTIONS
    - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
    - name: POSTGRESQL_SHARED_BUFFERS
    image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:eb7c6fa06fce6d4efc55b7311dd45797a26bd4d8ec4648056ec068b7a4653ec8
    imagePullPolicy: Always
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: 5432
      timeoutSeconds: 1
    name: myapp-postgresql
    ports:
    - containerPort: 5432
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -i
        - -c
        - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
          1'
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/pgsql/data
      name: myapp-postgresql-pvol
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-qkrtp
      readOnly: true
  dnsPolicy: ClusterFirst
  imagePullSecrets:
  - name: default-dockercfg-hlm88
  nodeName: amos01-compute001.amosdemo.io
  nodeSelector:
    node-role.kubernetes.io/compute: "true"
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seLinuxOptions:
      level: s0:c21,c20
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 60
  volumes:
  - name: myapp-postgresql-pvol
    persistentVolumeClaim:
      claimName: myapp-postgresql-claim
  - name: default-token-qkrtp
    secret:
      defaultMode: 420
      secretName: default-token-qkrtp
status:
  phase: Pending
  qosClass: BestEffort
