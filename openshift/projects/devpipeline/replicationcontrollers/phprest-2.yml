apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    openshift.io/deployer-pod.completed-at: 2018-11-22 05:22:49 +0000 UTC
    openshift.io/deployer-pod.created-at: 2018-11-22 05:23:59 +0000 UTC
    openshift.io/deployer-pod.name: phprest-2-deploy
    openshift.io/deployment-config.latest-version: "2"
    openshift.io/deployment-config.name: phprest
    openshift.io/deployment.phase: Complete
    openshift.io/deployment.replicas: "1"
    openshift.io/deployment.status-reason: image change
    openshift.io/encoded-deployment-config: |
      {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"phprest","namespace":"devpipeline","selfLink":"/apis/apps.openshift.io/v1/namespaces/devpipeline/deploymentconfigs/phprest","uid":"cbf74d25-ee16-11e8-ba2b-0aa0c5b29fe8","resourceVersion":"3576945","generation":3,"creationTimestamp":"2018-11-22T05:23:51Z","labels":{"app":"phprest"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["phprest"],"from":{"kind":"ImageStreamTag","namespace":"devpipeline","name":"phprest:latest"},"lastTriggeredImage":"docker-registry.default.svc:5000/devpipeline/phprest@sha256:1a17b5369dd1b4d4328824277e76211104aeef2865036a5cc29909ed9eae28b5"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"phprest"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"phprest","deploymentconfig":"phprest"}},"spec":{"containers":[{"name":"phprest","image":"docker-registry.default.svc:5000/devpipeline/phprest@sha256:1a17b5369dd1b4d4328824277e76211104aeef2865036a5cc29909ed9eae28b5","ports":[{"containerPort":8080,"protocol":"TCP"},{"containerPort":8443,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"docker-registry.default.svc:5000/devpipeline/phprest@sha256:1a17b5369dd1b4d4328824277e76211104aeef2865036a5cc29909ed9eae28b5"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-11-22T05:23:51Z","lastTransitionTime":"2018-11-22T05:23:51Z","message":"Deployment config does not have minimum availability."}]}}
  creationTimestamp: null
  generation: 1
  labels:
    app: phprest
    openshift.io/deployment-config.name: phprest
  name: phprest-2
  ownerReferences:
  - apiVersion: apps.openshift.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: DeploymentConfig
    name: phprest
    uid: cbf74d25-ee16-11e8-ba2b-0aa0c5b29fe8
spec:
  replicas: 1
  selector:
    deployment: phprest-2
    deploymentconfig: phprest
  template:
    metadata:
      annotations:
        openshift.io/deployment-config.latest-version: "2"
        openshift.io/deployment-config.name: phprest
        openshift.io/deployment.name: phprest-2
      creationTimestamp: null
      labels:
        app: phprest
        deployment: phprest-2
        deploymentconfig: phprest
    spec:
      containers:
      - image: docker-registry.default.svc:5000/devpipeline/phprest@sha256:1a17b5369dd1b4d4328824277e76211104aeef2865036a5cc29909ed9eae28b5
        imagePullPolicy: Always
        name: phprest
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  replicas: 0
