apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/deployment-config.latest-version: "1"
    openshift.io/deployment-config.name: postgresql-sonarqube
    openshift.io/deployment.name: postgresql-sonarqube-1
    openshift.io/generated-by: OpenShiftNewApp
    openshift.io/scc: anyuid
  creationTimestamp: null
  generateName: postgresql-sonarqube-1-
  labels:
    app: sonarqube
    deployment: postgresql-sonarqube-1
    deploymentconfig: postgresql-sonarqube
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicationController
    name: postgresql-sonarqube-1
    uid: 146a952e-e708-11e8-b839-0aa0c5b29fe8
spec:
  containers:
  - env:
    - name: POSTGRESQL_USER
      value: sonar
    - name: POSTGRESQL_PASSWORD
      value: Fv8qVNcLM8yt1iUO
    - name: POSTGRESQL_DATABASE
      value: sonar
    image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:eb7c6fa06fce6d4efc55b7311dd45797a26bd4d8ec4648056ec068b7a4653ec8
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: 5432
      timeoutSeconds: 1
    name: postgresql
    ports:
    - containerPort: 5432
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -i
        - -c
        - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
          1'
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        memory: 256Mi
      requests:
        memory: 256Mi
    securityContext:
      capabilities:
        drop:
        - MKNOD
      privileged: false
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/pgsql/data
      name: postgresql-data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-kcgrz
      readOnly: true
  dnsPolicy: ClusterFirst
  imagePullSecrets:
  - name: default-dockercfg-mnwxn
  nodeName: amos01-compute001.amosdemo.io
  nodeSelector:
    node-role.kubernetes.io/compute: "true"
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seLinuxOptions:
      level: s0:c11,c10
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: postgresql-data
    persistentVolumeClaim:
      claimName: postgresql-sonarqube-data
  - name: default-token-kcgrz
    secret:
      defaultMode: 420
      secretName: default-token-kcgrz
status:
  phase: Pending
  qosClass: Burstable
