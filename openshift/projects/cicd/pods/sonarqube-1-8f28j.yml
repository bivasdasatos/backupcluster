apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/container.sonarqube.image.entrypoint: '["./bin/run.sh"]'
    openshift.io/deployment-config.latest-version: "1"
    openshift.io/deployment-config.name: sonarqube
    openshift.io/deployment.name: sonarqube-1
    openshift.io/generated-by: OpenShiftNewApp
    openshift.io/scc: restricted
  creationTimestamp: null
  generateName: sonarqube-1-
  labels:
    app: sonarqube
    deployment: sonarqube-1
    deploymentconfig: sonarqube
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicationController
    name: sonarqube-1
    uid: 14b02bf7-e708-11e8-b839-0aa0c5b29fe8
spec:
  containers:
  - env:
    - name: SONARQUBE_JDBC_PASSWORD
      value: Fv8qVNcLM8yt1iUO
    - name: SONARQUBE_JDBC_URL
      value: jdbc:postgresql://postgresql-sonarqube/sonar
    - name: SONARQUBE_JDBC_USERNAME
      value: sonar
    image: openshiftdemos/sonarqube@sha256:fe2c7b8e9923c4dc4bd7a5d12d51ee61eb171f8898121d5f7a921ba4e5a3e67c
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: 9000
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 5
    name: sonarqube
    ports:
    - containerPort: 9000
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: 9000
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 1Gi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/sonarqube/data
      name: sonarqube-data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-kcgrz
      readOnly: true
  dnsPolicy: ClusterFirst
  imagePullSecrets:
  - name: default-dockercfg-mnwxn
  nodeName: amos01-compute001.amosdemo.io
  nodeSelector:
    node-role.kubernetes.io/compute: "true"
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seLinuxOptions:
      level: s0:c11,c10
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: sonarqube-data
    persistentVolumeClaim:
      claimName: sonarqube-data
  - name: default-token-kcgrz
    secret:
      defaultMode: 420
      secretName: default-token-kcgrz
status:
  phase: Pending
  qosClass: Burstable
