apiVersion: v1
kind: BuildConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewBuild
  creationTimestamp: null
  labels:
    build: wlpapp
  name: wlpapp
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: wlpapp:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    dockerfile: |
      FROM websphere-liberty:latest
      RUN mkdir -p /opt/ibm/wlp/usr/servers/defaultServer
      RUN mkdir -p /opt/ibm/wlp/usr/servers/defaultServer/dropins

      RUN mkdir -p /opt/ibm/wlp/output/defaultServer/workarea \
              && chmod -R g+rw /opt/ibm/wlp/output/defaultServer/workarea

      RUN mkdir -p /opt/ibm/wlp/postgressjar \
              && chmod -R g+rw /opt/ibm/wlp/postgressjar

      RUN chmod -R g+rw $WLP_OUTPUT_DIR/defaultServer/logs
      #RUN installUtility install jdbc-4.1
      #RUN installUtility install servlet-3.1

      #COPY ./webs/web/target/war/interruptions.war /opt/ibm/wlp/usr/servers/defaultServer/dropins
      #COPY ./webs/web/target/war/server.xml /opt/ibm/wlp/usr/servers/defaultServer
      #COPY ./webs/web/target/war/postgresql-9.1-901-1.jdbc4.jar /opt/ibm/wlp/postgressjar

      COPY interruptions.war /opt/ibm/wlp/usr/servers/defaultServer/dropins
      COPY server.xml /opt/ibm/wlp/usr/servers/defaultServer
      COPY postgresql-9.1-901-1.jdbc4.jar /opt/ibm/wlp/postgressjar
      CMD ["/opt/ibm/wlp/bin/server", "run", "defaultServer"]
    type: Dockerfile
  strategy:
    dockerStrategy:
      from:
        kind: ImageStreamTag
        name: websphere-liberty:latest
        namespace: cicd-demo
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers:
  - github:
      secret: S4Osto5d4XU9P6QX2nkn
    type: GitHub
  - generic:
      secret: jMF6FBytYkyPfYnTEt3m
    type: Generic
  - type: ConfigChange
  - imageChange: {}
    type: ImageChange
status:
  lastVersion: 0
